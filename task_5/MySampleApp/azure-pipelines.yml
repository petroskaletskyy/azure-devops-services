# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - main
  
pool:
  name: MyLinux
  demands:
    - agent.name -equals myAgent
  
variables: 
  group: task-1-variable-group
  webAppName: 'myappnodewebappdemo'
  resourceGroup: 'Petro_Skaletskyy'
  serviceConnectionName: 'MyServiceConnection'
  
stages:
- stage: Build
  jobs:
    - job: Build
      steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '16.x'
          displayName: 'Install Node.js'
  
        - script: |
            npm install
          displayName: 'Install dependencies'
  
        - script: |
            npm run build
          displayName: "Build"
  
        - script: |
            npm install supertest --save-dev
            npm test
          displayName: "Run tests"

        - script: |
            sudo apt-get update && sudo apt-get install -y zip
          displayName: 'Install zip packages'    

        - script: |
            mkdir -p $(System.DefaultWorkingDirectory)/dist
          displayName: 'Create dist directory'
          
        - script: |
            cp -r package.json package-lock.json app.js app.test.js node_modules $(System.DefaultWorkingDirectory)/dist/
          displayName: 'Copy files to dist'    

        - task: ArchiveFiles@2
          inputs:
            rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist'   
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
            replaceExistingArchive: true
            verbose: true
          displayName: 'Archive files'  
          
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)' 
            ArtifactName: 'drop'
            publishLocation: 'Container' 
          displayName: "Publish Build Artifacts"  
  
- stage: Deploy
  dependsOn: Build
  condition: succeeded()
  jobs:
    - job: Deploy_WebApp
      steps:
        - task: DownloadBuildArtifacts@0
          inputs:
            buildId: 'current'
            downloadType: 'single'
            artifactName: 'drop'
            downloadPath: '$(System.ArtifactsDirectory)'
            
        - task: AzureWebApp@1
          inputs:
            azureSubscription: '$(serviceConnectionName)'
            appType: 'webApp'
            appName: '$(webAppName)'
            package: '$(System.ArtifactsDirectory)/drop/$(Build.BuildId).zip'